{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\palak\\\\Desktop\\\\React\\\\DailyJournal\\\\quizapp\\\\src\\\\containers\\\\Input.js\";\nimport React from 'react';\nimport './Input.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst input = props => {\n  let inputElement = null;\n  const inputClasses = [\"InputElement\"];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(\"Invalid\");\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'textarea':\n      inputElement = /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'select':\n      inputElement = /*#__PURE__*/_jsxDEV(\"select\", {\n        className: inputClasses.join(' '),\n        value: props.value,\n        onChange: props.changed,\n        children: props.elementConfig.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.displayValue\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n      break;\n\n    default:\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Input\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"classes.Label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), inputElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\nexport default input;","map":{"version":3,"sources":["C:/Users/palak/Desktop/React/DailyJournal/quizapp/src/containers/Input.js"],"names":["React","input","props","inputElement","inputClasses","invalid","shouldValidate","touched","push","elementType","join","elementConfig","value","changed","options","map","option","displayValue","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAKC,KAAF,IAAa;AACvB,MAAIC,YAAY,GAAG,IAAnB;AACA,QAAMC,YAAY,GAAG,CAAC,cAAD,CAArB;;AAEA,MAAIF,KAAK,CAACG,OAAN,IAAiBH,KAAK,CAACI,cAAvB,IAAyCJ,KAAK,CAACK,OAAnD,EAA4D;AACxDH,IAAAA,YAAY,CAACI,IAAb,CAAkB,SAAlB;AACH;;AAED,UAASN,KAAK,CAACO,WAAf;AACI,SAAO,OAAP;AACIN,MAAAA,YAAY,gBAAG;AACX,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADA;AAAA,WAEPR,KAAK,CAACS,aAFC;AAGX,QAAA,KAAK,EAAET,KAAK,CAACU,KAHF;AAIX,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAJL;AAAA;AAAA;AAAA;AAAA,cAAf;AAKA;;AACJ,SAAO,UAAP;AACIV,MAAAA,YAAY,gBAAG;AACX,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADA;AAAA,WAEPR,KAAK,CAACS,aAFC;AAGX,QAAA,KAAK,EAAET,KAAK,CAACU,KAHF;AAIX,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAJL;AAAA;AAAA;AAAA;AAAA,cAAf;AAKA;;AACJ,SAAO,QAAP;AACIV,MAAAA,YAAY,gBACR;AACI,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADf;AAEI,QAAA,KAAK,EAAER,KAAK,CAACU,KAFjB;AAGI,QAAA,QAAQ,EAAEV,KAAK,CAACW,OAHpB;AAAA,kBAIKX,KAAK,CAACS,aAAN,CAAoBG,OAApB,CAA4BC,GAA5B,CAAgCC,MAAM,iBACnC;AAA2B,UAAA,KAAK,EAAEA,MAAM,CAACJ,KAAzC;AAAA,oBACKI,MAAM,CAACC;AADZ,WAAaD,MAAM,CAACJ,KAApB;AAAA;AAAA;AAAA;AAAA,gBADH;AAJL;AAAA;AAAA;AAAA;AAAA,cADJ;AAYA;;AACJ;AACIT,MAAAA,YAAY,gBAAG;AACX,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADA;AAAA,WAEPR,KAAK,CAACS,aAFC;AAGX,QAAA,KAAK,EAAET,KAAK,CAACU,KAHF;AAIX,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAJL;AAAA;AAAA;AAAA;AAAA,cAAf;AA9BR;;AAqCA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA,gBAAkCX,KAAK,CAACgB;AAAxC;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKf,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CApDD;;AAsDA,eAAeF,KAAf","sourcesContent":["import React from 'react';\r\n\r\nimport './Input.css';\r\n\r\nconst input = ( props ) => {\r\n    let inputElement = null;\r\n    const inputClasses = [\"InputElement\"];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(\"Invalid\");\r\n    }\r\n\r\n    switch ( props.elementType ) {\r\n        case ( 'input' ):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'textarea' ):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"Input\">\r\n            <label className=\"classes.Label\">{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default input;"]},"metadata":{},"sourceType":"module"}